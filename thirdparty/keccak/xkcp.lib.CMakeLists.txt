#   Copyright (C) 2015-2019 Virgil Security, Inc.
#
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are
#   met:
#
#       (1) Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#       (2) Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#       (3) Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR
#   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#   DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
#   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#   IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.

cmake_minimum_required(VERSION 3.12 FATAL_ERROR)

project(xkcp VERSION 0.0.1 LANGUAGES C)

# ---------------------------------------------------------------------------
#   Install helpers.
# ---------------------------------------------------------------------------
include(GNUInstallDirs)

# ---------------------------------------------------------------------------
#   Build options.
# ---------------------------------------------------------------------------
set(XKCP_IMPL "reference")

# ---------------------------------------------------------------------------
#   Interface libraries.
# ---------------------------------------------------------------------------
#
#   Common.
#
add_library(xkcp-common INTERFACE)
target_sources(xkcp-common INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/common/align.h"
        "${CMAKE_CURRENT_LIST_DIR}/common/brg_endian.h"
        )
target_include_directories(xkcp-common INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/common/>"
        )

#
#   KeccakSponge-common.
#
add_library(xkcp-KeccakSponge-common INTERFACE)
target_sources(xkcp-KeccakSponge-common INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/KeccakSponge-common.h"
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/KeccakSponge.inc"
        )
target_include_directories(xkcp-KeccakSponge-common INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/high/Keccak/>"
        )
target_link_libraries(xkcp-KeccakSponge-common INTERFACE xkcp-common)

#
#   KeccakSpongeWidth1600.
#
add_library(xkcp-KeccakSpongeWidth1600 INTERFACE)
target_sources(xkcp-KeccakSpongeWidth1600 INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/KeccakSpongeWidth1600.c"
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/KeccakSpongeWidth1600.h"
        )
target_include_directories(xkcp-KeccakSpongeWidth1600 INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/high/Keccak/>"
        )
target_link_libraries(xkcp-KeccakSpongeWidth1600 INTERFACE xkcp-KeccakSponge-common)

#
#   FIPS202.
#
add_library(xkcp-FIPS202 INTERFACE)
target_sources(xkcp-FIPS202 INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/FIPS202/SimpleFIPS202.c"
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/FIPS202/SimpleFIPS202.h"
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/FIPS202/KeccakHash.c"
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/FIPS202/KeccakHash.h"
        )
target_include_directories(xkcp-FIPS202 INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/high/Keccak/FIPS202/>"
        )
target_link_libraries(xkcp-FIPS202 INTERFACE xkcp-KeccakSpongeWidth1600)

#
#   FIPS202.
#
add_library(xkcp-SP800-185 INTERFACE)
target_sources(xkcp-SP800-185 INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/SP800-185/SP800-185.c"
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/SP800-185/SP800-185.inc"
        "${CMAKE_CURRENT_LIST_DIR}/high/Keccak/SP800-185/SP800-185.h"
        "${CMAKE_CURRENT_LIST_DIR}/high/common/Phases.h"
        )
target_include_directories(xkcp-SP800-185 INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/high/common/>"
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/high/Keccak/SP800-185/>"
        )
target_link_libraries(xkcp-SP800-185 INTERFACE xkcp-KeccakSpongeWidth1600)

# ---------------------------------------------------------------------------
#   Implementation libraries.
# ---------------------------------------------------------------------------
#
#   width1600.
#

add_library(xkcp-width1600 INTERFACE)

#
#   reference1600.
#
add_library(xkcp-reference1600 INTERFACE)
target_sources(xkcp-reference1600 INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600/Reference/KeccakP-1600-reference.c"
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600/Reference/KeccakP-1600-reference.h"
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600/Reference/KeccakP-1600-SnP.h"
        )
target_include_directories(xkcp-reference1600 INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600/Reference/>"
        )
target_link_libraries(xkcp-reference1600 INTERFACE xkcp-reference1600)

#
#   1600times2on1.
#
add_library(xkcp-1600times2on1 INTERFACE)
target_sources(xkcp-1600times2on1 INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times2/FallbackOn1/KeccakP-1600-times2-on1.c"
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times2/FallbackOn1/KeccakP-1600-times2-SnP.h"
        "${CMAKE_CURRENT_LIST_DIR}/low/common/PlSnP-Fallback.inc"
        )
target_include_directories(xkcp-1600times2on1 INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times2/FallbackOn1/>"
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/low/common/>"
        )
target_link_libraries(xkcp-1600times2on1 INTERFACE xkcp-1600times2on1)

#
#   1600times4on1.
#
add_library(xkcp-1600times4on1 INTERFACE)
target_sources(xkcp-1600times4on1 INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times4/FallbackOn1/KeccakP-1600-times4-on1.c"
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times4/FallbackOn1/KeccakP-1600-times4-SnP.h"
        "${CMAKE_CURRENT_LIST_DIR}/low/common/PlSnP-Fallback.inc"
        )
target_include_directories(xkcp-1600times4on1 INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times4/FallbackOn1/>"
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/low/common/>"
        )
target_link_libraries(xkcp-1600times4on1 INTERFACE xkcp-1600times4on1)

#
#   1600times8on1.
#
add_library(xkcp-1600times8on1 INTERFACE)
target_sources(xkcp-1600times8on1 INTERFACE
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times8/FallbackOn1/KeccakP-1600-times8-on1.c"
        "${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times8/FallbackOn1/KeccakP-1600-times8-SnP.h"
        "${CMAKE_CURRENT_LIST_DIR}/low/common/PlSnP-Fallback.inc"
        )
target_include_directories(xkcp-1600times8on1 INTERFACE
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/low/KeccakP-1600-times8/FallbackOn1/>"
        "$<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/low/common/>"
        )
target_link_libraries(xkcp-1600times8on1 INTERFACE xkcp-1600times8on1)

#
#   serial-fallbacks.
#
add_library(xkcp-serial-fallbacks INTERFACE)
target_link_libraries(xkcp-serial-fallbacks INTERFACE xkcp-1600times2on1 xkcp-1600times4on1 xkcp-1600times8on1)


#
#   KeccakReference.
#
add_library(xkcp-KeccakReference INTERFACE)
target_link_libraries(xkcp-KeccakReference INTERFACE xkcp-reference1600 xkcp-serial-fallbacks)


# ---------------------------------------------------------------------------
#   Keccak library.
# ---------------------------------------------------------------------------
#
# Build.
#
add_library(keccak)
target_link_libraries(keccak
    PUBLIC
        xkcp-FIPS202
        xkcp-SP800-185
        $<$<STREQUAL:"${XKCP_IMPL}","reference">:xkcp-KeccakReference>
    )

#
# Install headers.
#
install(
        DIRECTORY "$<TARGET_PROPERTY:keccak,INTERFACE_INCLUDE_DIRECTORIES>"
        DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/libkeccak.a.headers"
        FILES_MATCHING PATTERN "*.h"
        )

#
# Install libraries.
#
install(
        TARGETS keccak
        EXPORT keccakTargets
        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
        FRAMEWORK DESTINATION "${CMAKE_INSTALL_LIBDIR}"
        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
        )
