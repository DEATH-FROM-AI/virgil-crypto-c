<implementor name="alg info der" is_default="1">
    Implementation of deserialization algorithm information

    <implementation name="alg info der serializer">
        Provide DER serializer of algorithm information.

        <interface name="defaults"/>
        <interface name="alg info serializer"/>

        <require class="asn1wr"/>
        <require class="oid"/>
        <require enum="asn1 tag"/>
        <require impl="cipher alg info"/>
        <require impl="kdf alg info"/>
        <require impl="simple alg info"/>
        <require interface="alg info"/>

        <dependency name="asn1 writer" interface="asn1 writer"/>


        <method name="is alg require null params" is_static="1">
            Return true if algorithm identifier requires that optinal
            parameter will be NULL.

            <argument name="alg id" enum="alg id"/>

            <return type="boolean"/>
        </method>


        <method name="serialized simple alg info len">
            Return buffer size enough to hold serialized class "simple alg info".

            <argument name="simple alg info" impl="simple alg info"/>

            <return type="size"/>
        </method>


        <method name="serialize simple alg info">
            Serialize class "simple alg info".

            <argument name="simple alg info" impl="simple alg info"/>
            <argument name="out" class="buffer">
                <length method="serialized simple alg info len">
                    <proxy argument="simple alg info" to="simple alg info"/>
                </length>
            </argument>

            <return type="size"/>
        </method>


        <method name="serialized kdf alg info len">
            Return buffer size enough to hold serialized class "kdf alg info".

            <argument name="kdf alg info" impl="kdf alg info"/>

            <return type="size"/>
        </method>


        <method name="serialize kdf alg info">
            Serialize class "kdf alg info".

            <argument name="kdf alg info" impl="kdf alg info"/>
            <argument name="out" class="buffer">
                <length method="serialized kdf alg info len">
                    <proxy argument="kdf alg info" to="kdf alg info"/>
                </length>
            </argument>

            <return type="size"/>
        </method>


        <method name="serialized cipher alg info len">
            Return buffer size enough to hold serialized class "cipher alg info".

            <argument name="cipher alg info" impl="cipher alg info"/>

            <return type="size"/>
        </method>


        <method name="serialize cipher alg info">
            Serialize class "cipher alg info".

            <argument name="cipher alg info" impl="cipher alg info"/>
            <argument name="out" class="buffer">
                <length method="serialized cipher alg info len">
                    <proxy argument="cipher alg info" to="cipher alg info"/>
                </length>
            </argument>

            <return type="size"/>
        </method>
    </implementation>


    <implementation name="alg info der deserializer">
        Provide DER deserializer of algorithm information.

        <interface name="defaults"/>
        <interface name="alg info deserializer"/>

        <require class="asn1rd"/>
        <require class="oid"/>
        <require enum="asn1 tag"/>
        <require impl="cipher alg info"/>
        <require impl="kdf alg info"/>
        <require impl="simple alg info"/>
        <require interface="alg info"/>

        <dependency name="asn1 reader" interface="asn1 reader"/>

        <method name="deserialize simple alg info">
            Restore class "simple alg info" from the binary data.

            <argument name="data" class="data"/>
            <argument name="error" class="error ctx" access="readwrite"/>

            <return class="simple alg info" access="disown"/>
        </method>


        <method name="deserialize kdf alg info">
            Restore class "kdf alg info" from the binary data.

            <argument name="data" class="data"/>
            <argument name="error" class="error ctx" access="readwrite"/>

            <return class="kdf alg info" access="disown"/>
        </method>


        <method name="deserialize cipher alg info">
            Restore class "cipher alg info" from the binary data.

            <argument name="data" class="data"/>
            <argument name="error" class="error ctx" access="readwrite"/>

            <return class="cipher alg info" access="disown"/>
        </method>
    </implementation>
</implementor>
