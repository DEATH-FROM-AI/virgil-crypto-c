<implementor name="virgil" is_default="1">
    Provide implementation based on the Virgil Security implementations.

    <implementation name="hmac">
        Virgil Security implementation of HMAC algorithm (RFC 2104) (FIPS PUB 198-1).

        <interface name="alg"/>
        <interface name="mac"/>

        <require interface="alg"/>
        <require interface="alg info"/>
        <require class="alg factory"/>
        <require impl="hash based alg info"/>

        <dependency name="hash" interface="hash"/>

        <property name="ipad" class="buffer" access="readwrite"/>
    </implementation>


    <implementation name="hkdf">
        Virgil Security implementation of the HKDF (RFC 6234) algorithm.

        <interface name="alg"/>
        <interface name="kdf"/>
        <interface name="salted kdf"/>

        <require interface="alg"/>
        <require interface="alg info"/>
        <require class="alg factory"/>
        <require impl="hash based alg info"/>

        <dependency name="hash" interface="hash"/>

        <property name="salt" class="buffer"/>
        <property name="context info" class="buffer"/>
        <property name="hmac" impl="hmac" access="readwrite" is_reference="0" require_definition="public"/>

        <constant name="hash counter max" value="255"/>

        <method name="extract">
            Extracts fixed-length pseudorandom key from keying material.

            <argument name="data" class="data"/>
            <argument name="pr key" class="buffer"/>
        </method>

        <method name="expand">
            Expands the pseudorandom key to the desired length.

            <argument name="pr key" class="buffer"/>
            <argument name="key" class="buffer"/>
            <argument name="key len" type="size"/>
        </method>
    </implementation>


    <implementation name="kdf1">
        Virgil Security implementation of the KDF1 (ISO-18033-2) algorithm.

        <interface name="alg"/>
        <interface name="kdf"/>

        <require interface="alg"/>
        <require interface="alg info"/>
        <require class="alg factory"/>
        <require impl="hash based alg info"/>

        <dependency name="hash" interface="hash"/>
    </implementation>


    <implementation name="kdf2">
        Virgil Security implementation of the KDF2 (ISO-18033-2) algorithm.

        <interface name="alg"/>
        <interface name="kdf"/>

        <require interface="alg"/>
        <require interface="alg info"/>
        <require class="alg factory"/>
        <require impl="hash based alg info"/>

        <dependency name="hash" interface="hash"/>
    </implementation>


    <implementation name="fake random">
        Random number generator that is used for test purposes only.

        <interface name="random"/>
        <interface name="entropy source"/>

        <context>
            <property name="data source" class="data" access="readwrite"/>
            <property name="byte source" type="byte"/>
            <property name="pos" type="size"/>
        </context>

        <method name="setup source byte" declaration="public">
            Configure random number generator to generate sequence filled with given byte.

            <argument name="byte source" type="byte"/>
        </method>

        <method name="setup source data" declaration="public">
            Configure random number generator to generate random sequence from given data.
            Note, that given data is used as circular source.

            <argument name="data source" class="data"/>
        </method>
    </implementation>


    <implementation name="pkcs5 pbkdf2">
        Virgil Security implementation of the PBKDF2 (RFC 8018) algorithm.

        <interface name="alg"/>
        <interface name="kdf"/>
        <interface name="salted kdf"/>

        <require interface="alg"/>
        <require interface="alg info"/>
        <require class="alg factory"/>
        <require impl="hmac"/>
        <require impl="sha384"/>
        <require impl="salted kdf alg info"/>

        <dependency name="hmac" interface="mac"/>

        <property name="salt" class="buffer"/>
        <property name="iteration count" type="size"/>

        <method name="setup defaults" declaration="public">
            Setup predefined values to the uninitialized class dependencies.
        </method>
    </implementation>


    <implementation name="pkcs5 pbes2">
        Virgil Security implementation of the PBES2 (RFC 8018) algorithm.

        <interface name="alg"/>
        <interface name="encrypt"/>
        <interface name="decrypt"/>

        <require interface="alg"/>
        <require interface="alg info"/>
        <require class="alg factory"/>
        <require impl="pkcs5 pbkdf2"/>
        <require impl="aes256 gcm"/>
        <require impl="pbe alg info"/>

        <dependency name="kdf" interface="salted kdf"/>
        <dependency name="cipher" interface="cipher"/>

        <property name="password" class="buffer"/>

        <method name="reset" declaration="public">
            Configure cipher with a new password.

            <argument name="pwd" class="data"/>
        </method>
    </implementation>
</implementor>
