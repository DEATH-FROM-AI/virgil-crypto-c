<class name="key info">

    <require interface="alg info"/>
    <require impl="compound key alg info"/>
    <require impl="chained key alg info"/>

    <property name="alg id" enum="alg id"/>
    <property name="chained l1 alg id" enum="alg id"/>
    <property name="chained l2 alg id" enum="alg id"/>
    <property name="compound cipher alg id" enum="alg id"/>
    <property name="compound signer alg id" enum="alg id"/>
    <property name="compound cipher l1 alg id" enum="alg id"/>
    <property name="compound cipher l2 alg id" enum="alg id"/>
    <property name="compound signer l1 alg id" enum="alg id"/>
    <property name="compound signer l2 alg id" enum="alg id"/>

    <constructor name="with alg info">
        Build key information based on the generic algorithm information.

        <argument name="alg info" interface="alg info"/>
    </constructor>

    <method name="is compound" is_const="1">
        Return true if a key is a compound key

        <return type="boolean"/>
    </method>

    <method name="is chained" is_const="1">
        Return true if a key is a chained key

        <return type="boolean"/>
    </method>

    <method name="is compound chained" is_const="1">
        Return true if a key is a compound key and compounds cipher key
        and signer key are chained keys.

        <return type="boolean"/>
    </method>

    <method name="is compound chained cipher" is_const="1">
        Return true if a key is a compound key and compounds cipher key
        is a chained key.

        <return type="boolean"/>
    </method>

    <method name="is compound chained signer" is_const="1">
        Return true if a key is a compound key and compounds signer key
        is a chained key.

        <return type="boolean"/>
    </method>

    <method name="is hybrid post quantum" is_const="1">
        Return true if a key is a compound key that contains chained keys
        for encryption/decryption and signing/verifying that itself
        contains a combination of classic keys and post-quantum keys.

        <return type="boolean"/>
    </method>

    <method name="is hybrid post quantum cipher" is_const="1">
        Return true if a key is a compound key that contains a chained key
        for encryption/decryption that contains a classic key and
        a post-quantum key.

        <return type="boolean"/>
    </method>

    <method name="is hybrid post quantum signer" is_const="1">
        Return true if a key is a compound key that contains a chained key
        for signing/verifying that contains a classic key and
        a post-quantum key.

        <return type="boolean"/>
    </method>

    <method name="alg id" is_const="1">
        Return common type of the key.

        <return enum="alg id"/>
    </method>

    <method name="compound cipher alg id" is_const="1">
        Return compound's cipher key id, if key is compound.
        Return None, otherwise.

        <return enum="alg id"/>
    </method>

    <method name="compound signer alg id" is_const="1">
        Return compound's signer key id, if key is compound.
        Return None, otherwise.

        <return enum="alg id"/>
    </method>

    <method name="chained l1 alg id" is_const="1">
        Return chained l1 key id, if key is chained.
        Return None, otherwise.

        <return enum="alg id"/>
    </method>

    <method name="chained l2 alg id" is_const="1">
        Return chained l2 key id, if key is chained.
        Return None, otherwise.

        <return enum="alg id"/>
    </method>

    <method name="compound cipher l1 alg id" is_const="1">
        Return l1 key id of compound's cipher key, if key is compound(chained, ...)
        Return None, otherwise.

        <return enum="alg id"/>
    </method>

    <method name="compound cipher l2 alg id" is_const="1">
        Return l2 key id of compound's cipher key, if key is compound(chained, ...)
        Return None, otherwise.

        <return enum="alg id"/>
    </method>

    <method name="compound signer l1 alg id" is_const="1">
        Return l1 key id of compound's signer key, if key is compound(..., chained)
        Return None, otherwise.

        <return enum="alg id"/>
    </method>

    <method name="compound signer l2 alg id" is_const="1">
        Return l2 key id of compound's signer key, if key is compound(..., chained)
        Return None, otherwise.

        <return enum="alg id"/>
    </method>
</class>
