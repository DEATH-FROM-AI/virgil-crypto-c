<implementor name="ed25519 pk" is_default="1">
    Provide implementation based on the library ed25519
    <implementation name="ed25519 public key">
      This is implementation of ED25519 public key
      <require library="ed25519" feature="library"/>
      <require class="endianness"/>

      <context>
        <require header="ed25519/ed25519.h"/>
        <property name="public_key" type="byte" library="ed25519" access="readwrite">
          <array length="fixed" length_constant="ED25519_KEY_LEN"/>
        </property>
        <property name="signature" type="byte" library="ed25519" access="readwrite">
          <array length="fixed" length_constant="ED25519_KEY_LEN"/>
        </property>
      </context>

      <interface name="key"/>
      <interface name="public key"/>
      <interface name="verify"/>
      <interface name="export public key"/>
      <interface name="import public key"/>

    </implementation>

    <implementation name="ed25519 private key">
      This is implementation of ED25519 private key
      <require library="ed25519" feature="library"/>
      <require module="ed25519 public key impl"/>
      <require class="endianness"/>

      <context>
        <require header="ed25519/ed25519.h"/>
        <property name="secret_key" type="byte" library="ed25519" access="readwrite">
          <array length="fixed" length_constant="ED25519_KEY_LEN"/>
        </property>
        <property name="signature" type="byte" library="ed25519" access="readwrite">
          <array length="fixed" length_constant="ED25519_SIG_LEN"/>
        </property>
      </context>

      <dependency name="random" interface="random"/>

      <interface name="key"/>
      <interface name="generate key"/>
      <interface name="private key"/>
      <interface name="sign"/>
      <interface name="export private key"/>
      <interface name="import private key"/>
      <interface name="compute shared key"/>

    </implementation>
</implementor>
