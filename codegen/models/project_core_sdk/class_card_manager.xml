<class name="card manager">
    Class responsible for operations with Virgil Cards and it's representations.


    <require class="unix time"/>
    <require class="raw card verifier"/>
    <require class="raw card signer"/>
    <require class="card" api="private"/>
    <require class="card list" api="private"/>

    <require interface="private key" project="foundation"/>
    <require class="key provider" project="foundation"/>
    <require class="signer" project="foundation"/>
    <require class="ctr drbg" project="foundation"/>

    <property name="virgil public key" interface="public key" project="foundation"/>
    <property name="raw card signer" class="raw card signer"/>

    <dependency name="random" interface="random" project="foundation" has_observers="1"/>


    <method name="configure">
        Configure internal states and dependencies.

        <return enum="status"/>
    </method>


    <method name="configure with service public key">
        Configure internal states and dependencies.
        Virgil Service Public Key can be customized (i.e. for stage env).

        <argument name="public key data" class="data"/>

        <return enum="status"/>
    </method>


    <method name="generate raw card" is_const="1">
        Generates self-signed "raw card".

        <argument name="identity" class="str"/>
        <argument name="private key" interface="private key" project="foundation"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="raw card" access="disown"/>
    </method>


    <method name="generate replacement raw card" is_const="1">
        Generates self-signed "raw card" with a defined previous card id.

        <argument name="identity" class="str"/>
        <argument name="private key" interface="private key" project="foundation"/>
        <argument name="previous card id" class="str"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="raw card" access="disown"/>
    </method>


    <method name="generate raw card inner" is_const="1" declaration="private">
        Generates self-signed "raw card" with an optional previous card id.

        <argument name="identity" class="str"/>
        <argument name="private key" interface="private key" project="foundation"/>
        <argument name="previous card id" class="str"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="raw card" access="disown"/>
    </method>


    <method name="import raw card" is_const="1">
        Create Card from "raw card" and verify it.

        Note, only self signature and Virgil Cards Service signatures are verified.

        <argument name="raw card" class="raw card"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="card" access="disown"/>
    </method>


    <method name="import raw card list" is_const="1">
        Create list of Cards from "raw card list" and verify it.

        Note, only self signature and Virgil Cards Service signatures are verified.

        <argument name="raw card list" class="raw card list"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="card list" access="disown"/>
    </method>


    <method name="import raw card with id" is_const="1">
        Create Card with expected card identifier from "raw card" and verify it.

        Note, only self signature and Virgil Cards Service signatures are verified.

        <argument name="raw card" class="raw card"/>
        <argument name="card id" class="str"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="card" access="disown"/>
    </method>


    <method name="import raw card with initial raw card" is_const="1">
        Create Card from "raw card" with additional check which ensures
        that Virgil Cards Service do not change self-signature.

        Note, only self signature and Virgil Cards Service signatures are verified.

        <argument name="raw card" class="raw card"/>
        <argument name="initial raw card" class="raw card"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="card" access="disown"/>
    </method>
</class>
