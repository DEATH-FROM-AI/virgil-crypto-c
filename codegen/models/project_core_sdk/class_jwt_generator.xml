<class name="jwt generator">
    Class responsible for JWT generation.

    <require class="unix time" sscope="private"/>
    <require class="base64 url" scope="private"/>
    <require impl="sha512" project="foundation" scope="private"/>
    <require impl="ctr drbg" project="foundation" scope="private"/>

    <constant name="default ttl" type="size" value="15 * 60"/>

    <property name="app id" class="str buffer"/>
    <property name="app key id" class="str buffer"/>
    <property name="app key" interface="private key" project="foundation" access="readonly"/>
    <property name="ttl" type="size"/>
    <property name="signer" class="signer" project="foundation"/>

    <dependency name="random" interface="random" project="foundation" has_observers="1"/>

    <constructor name="with credentials">
        Create JWT generator with an application credentials.


        <argument name="app id" class="str"/>

        <argument name="app key id" class="str"/>

        <argument name="app key" interface="private key" project="foundation" access="readonly"/>
    </constructor>


    <method name="setup defaults">
        Setup predefined values to the uninitialized class dependencies.

        <return enum="status"/>
    </method>


    <method name="set ttl">
        Set JWT TTL.

        <argument name="ttl" type="size"/>
    </method>


    <method name="generate token" is_const="1">
        Generate new JWT.

        <argument name="identity" class="str"/>
        <argument name="error" class="error" access="readwrite"/>

        <return class="jwt" access="disown"/>
    </method>
</class>
