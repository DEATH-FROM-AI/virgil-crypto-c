<class name="string" context="public" lifecycle="none" is_value_type="1">
    Encapsulates readonly array of characters, aka string view.


    <property name="str" type="char" access="readonly">
        Underlying string.

        <array length="given"/>
    </property>


    <property name="len" type="size">
        String length.
    </property>


    <variable name="empty string" type="char" declaration="private" definition="private">
        String that is used as "empty string" mark.

        <array length="derived"/>
        <value value="\0"/>
    </variable>


    <method name="is valid">
        Returns true if underlying string is defined.

        <return type="boolean"/>
    </method>


    <method name="is null terminated">
        Returns true if underlying string is null-terminated.

        <return type="boolean"/>
    </method>


    <method name="is empty">
        Returns true if underlying string is empty.

        <return type="boolean"/>
    </method>


    <method name="equal">
        Return true if given string is equal.

        <argument name="rhs" class="self"/>

        <return type="boolean"/>
    </method>


    <method name="len">
        Return string length.

        Note, this method can be used for wrappers where direct access
        to the structure fields is prohibited.

        <return type="size"/>
    </method>


    <method name="str" is_const="1">
        Returns underlying string characters.

        Note, this method can be used for wrappers where direct access
        to the structure fields is prohibited.

        <return type="byte" is_reference="1"/>
    </method>


    <method name="secure equal">
        Perform constant-time string comparison.
        The time depends on the given length but not on the string itself.
        Return true if given string is equal.

        <argument name="rhs" class="string"/>

        <return type="boolean"/>
    </method>


    <constructor name="string">
        Creates string.

        <argument name="str" type="char">
            <array length="given"/>
        </argument>

        <argument name="len" type="size"/>
    </constructor>


    <constructor name="from null terminated">
        Creates string from the null-terminated string.

        <argument name="str" type="char">
            <string length="null_terminated"/>
        </argument>
    </constructor>


    <constructor name="empty">
        Creates an empty string.
    </constructor>


    <method name="slice beg" >
        Return underlying string slice starting from beginning.

        <argument name="offset" type="size"/>
        <argument name="len" type="size"/>

        <return class="self" is_reference="0"/>
    </method>


    <method name="slice end">
        Return underlying string slice starting from ending.

        <argument name="offset" type="size"/>
        <argument name="len" type="size"/>

        <return class="self" is_reference="0"/>
    </method>
</class>
