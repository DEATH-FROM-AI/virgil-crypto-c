<class name="ratchet group participant data" context="public" scope="internal">

    <require class="ratchet common hidden" scope="public"/>
    <require class="ratchet common" scope="public"/>
    <require class="ratchet common" scope="public"/>

    <require module="ratchet typedefs" scope="context"/>

    <property name="id" class="vscr_ratchet_participant_id_t" is_reference="0" library="internal" access="readwrite"/>
    <property name="pub key" class="vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readwrite"/>

    <property name="epoches" class="ratchet group participant epoch" access="readwrite">
        <array length="fixed" length_constant=".(class_ratchet_common_hidden_constant_max_epoches_count)"/>
    </property>

    <method name="add epoch">
        <argument name="epoch" type="size"/>
        <argument name="chain key" class="ratchet chain key" access="disown"/>
    </method>

    <method name="delete epoch">
        <argument name="epoch" type="size"/>
    </method>

    <method name="find epoch" is_const="1">
        <argument name="epoch" type="size"/>

        <return class="ratchet group participant epoch" access="readwrite"/>
    </method>

    <method name="serialize" is_const="1">
        <argument name="data pb" class="ParticipantData" library="nanopb" access="readwrite"/>
    </method>

    <method name="deserialize" is_static="1">
        <argument name="data pb" class="ParticipantData" library="nanopb"/>
        <argument name="data" class="self" access="readwrite"/>
    </method>

</class>
