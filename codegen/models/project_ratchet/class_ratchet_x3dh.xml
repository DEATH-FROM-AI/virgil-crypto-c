<class name="ratchet x3dh" context="none" scope="internal">

    <require header="ed25519/ed25519.h" scope="private"/>

    <require class="buffer" project="common" scope="private"/>
    <require module="buffer defs" project="common" scope="private"/>

    <require impl="sha512" project="foundation" scope="private"/>
    <require impl="hkdf" project="foundation" scope="private"/>

    <require module="ratchet typedefs" scope="public"/>
    <require class="ratchet common hidden" scope="private"/>

    <method name="compute initiator x3dh secret" is_static="1">
        <argument name="sender identity private key" class="const vscr_ratchet_private_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="sender ephemeral private key" class="const vscr_ratchet_private_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="receiver identity public key" class="const vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="receiver long term public key" class="const vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="receiver has one time key" type="boolean"/>
        <argument name="receiver one time public key" class="const vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readonly"/>

        <argument name="shared key" class="vscr_ratchet_symmetric_key_t" is_reference="0" library="internal" access="readwrite"/>

        <return enum="status"/>
    </method>

    <method name="compute responder x3dh secret" is_static="1">
        <argument name="sender identity public key" class="const vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="sender ephemeral public key" class="const vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="receiver identity private key" class="const vscr_ratchet_private_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="receiver long term private key" class="const vscr_ratchet_private_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="receiver has one time key" type="boolean"/>
        <argument name="receiver one time private key" class="const vscr_ratchet_private_key_t" is_reference="0" library="internal" access="readonly"/>

        <argument name="shared key" class="vscr_ratchet_symmetric_key_t" is_reference="0" library="internal" access="readwrite"/>

        <return enum="status"/>
    </method>

    <method name="derive key" is_static="1" scope="internal">
        <argument name="shared secret" class="data"/>
        <argument name="shared key" class="vscr_ratchet_symmetric_key_t" is_reference="0" library="internal" access="readwrite"/>
    </method>

</class>
