<class name="ratchet keys" context="internal" scope="internal">

    <require impl="sha512" project="foundation" scope="private"/>
    <require impl="hmac" project="foundation" scope="private"/>
    <require impl="hkdf" project="foundation" scope="private"/>
    <require module="buffer defs" scope="private" project="common"/>

    <require module="ratchet typedefs" scope="context"/>

    <require class="ratchet common hidden" scope="context"/>
    <require class="ratchet chain key" scope="private"/>

    <require header="ed25519/ed25519.h" scope="private"/>

    <variable name="ratchet chain key seed" type="unsigned" size="1" declaration="private" definition="private">
        <array length="derived"/>
        <value value="0x02"/>
    </variable>

    <variable name="ratchet message key seed" type="unsigned" size="1" declaration="private" definition="private">
        <array length="derived"/>
        <value value="0x01"/>
    </variable>

    <method name="derive initial keys" is_static="1">
        <argument name="shared secret" class="data"/>
        <argument name="root key" class="vscr_ratchet_symmetric_key_t" is_reference="0" library="internal" access="readwrite"/>
        <argument name="chain key" class="vscr_ratchet_symmetric_key_t" is_reference="0" library="internal" access="readwrite"/>
    </method>

    <method name="create chain key" is_static="1">
        <argument name="root key" class="const vscr_ratchet_symmetric_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="private key" class="const vscr_ratchet_private_key_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="public key" class="const vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readonly"/>

        <argument name="new root key" class="vscr_ratchet_symmetric_key_t" is_reference="0" library="internal" access="readwrite"/>
        <argument name="chain key" class="ratchet chain key" access="readwrite"/>

        <return enum="status"/>
    </method>

    <method name="advance chain key" is_static="1">
        <argument name="chain key" class="ratchet chain key" access="readwrite"/>
    </method>

    <method name="create message key" is_static="1">
        <argument name="chain key" class="ratchet chain key"/>

        <return class="ratchet message key" access="disown"/>
    </method>

</class>
