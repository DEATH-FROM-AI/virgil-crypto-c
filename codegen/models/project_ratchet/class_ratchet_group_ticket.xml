<class name="ratchet group ticket" context="private">
    Group ticket used to start group session or change participants.

    <require class="ratchet common" scope="public"/>
    <require class="ratchet common hidden" scope="context"/>
    <require class="ratchet chain key" scope="private"/>

    <require module="ratchet typedefs" scope="context"/>

    <require module="buffer defs" project="common" scope="private"/>
    <require module="ratchet group message defs" scope="private"/>
    <require module="ratchet group message internal" scope="private"/>

    <require header="RatchetGroupMessage.pb.h" scope="private"/>
    <require header="pb_decode.h" scope="private"/>
    <require header="pb_encode.h" scope="private"/>

    <require header="ed25519/ed25519.h" is_system="1" scope="private"/>

    <require impl="ctr drbg" project="foundation" scope="private"/>

    <dependency name="rng" interface="random" project="foundation">
        Random used to generate keys
    </dependency>

    <property name="key utils" class="ratchet key utils"/>
    <property name="msg" class="ratchet group message" access="readwrite"/>

    <method name="setup defaults">
        Setups default dependencies:
        - RNG: CTR DRBG

        <return enum="status"/>
    </method>

    <method name="setup ticket internal" scope="internal">
        <argument name="epoch" type="unsigned" size="4"/>
        <argument name="session id" class="data"/>

        <return enum="status"/>
    </method>

    <method name="setup ticket as new">
        Set this ticket to start new group session.

        <argument name="session id" class="data">
            Session id, should be 32 byte
        </argument>

        <return enum="status"/>
    </method>

    <method name="set session id" declaration="private">
        Set session id in case you want to use your own identifier, otherwise - id will be generated for you.

        <argument name="session id" class="data">
            Session id, should be 32 byte
        </argument>
    </method>

    <method name="generate key" declaration="private">
        <return enum="status"/>
    </method>

    <method name="get ticket message" is_const="1">
        Returns message that should be sent to all participants using secure channel.

        <return class="ratchet group message" access="readonly">
            Ratchet group message.
        </return>
    </method>
</class>
