<class name="ratchet group ticket" context="private">
    Group ticket used to start group session.

    <require class="ratchet common" scope="public"/>
    <require class="ratchet common hidden" scope="context"/>
    <require class="ratchet chain key" scope="private"/>

    <require module="ratchet typedefs" scope="context"/>

    <require module="buffer defs" project="common" scope="private"/>
    <require module="ratchet group message defs" scope="private"/>
    <require module="ratchet group message internal" scope="private"/>

    <require header="RatchetGroupMessage.pb.h" scope="private"/>
    <require header="pb_decode.h" scope="private"/>
    <require header="pb_encode.h" scope="private"/>

    <require header="ed25519/ed25519.h" is_system="1" scope="private"/>

    <require impl="ctr drbg" project="foundation" scope="private"/>

    <dependency name="rng" interface="random" project="foundation">
        Random used to generate keys
    </dependency>

    <property name="key utils" class="ratchet key utils"/>
    <property name="msg" class="ratchet group message" access="readwrite"/>
    <property name="epoch change" type="boolean" access="readwrite"/>

    <method name="setup defaults">
        Setups default dependencies:
        - RNG: CTR DRBG

        <return enum="status"/>
    </method>

    <method name="setup ticket internal" scope="internal">
        <argument name="epoch" type="size"/>
        <argument name="epoch change" type="boolean"/>
        <argument name="session id" class="data"/>
    </method>

    <method name="setup ticket as new">
        <return enum="status"/>
    </method>

    <method name="add new participant">
        Adds participant to chat.

        <argument name="participant id" class="data">
            Participant's 32-byte identifier.
        </argument>
        <argument name="public key" class="data">
            Participant's Ed25518 identity public key in PKCS8.
        </argument>

        <return enum="status">
            Error
        </return>
    </method>

    <method name="add existing participant" scope="internal">
        <argument name="id" class="vscr_ratchet_participant_id_t" is_reference="0" library="internal" access="readonly"/>
        <argument name="pub key" class="vscr_ratchet_public_key_t" is_reference="0" library="internal" access="readonly"/>

        <argument name="chain key" class="ratchet chain key"/>

        <return enum="status">
            Error
        </return>
    </method>

    <method name="add participant to msg" declaration="private" is_static="1">
        <argument name="msg info" class="MessageGroupInfo" library="nanopb" access="readwrite"/>
        <argument name="participant id" class="data"/>
        <argument name="public key" class="data"/>
        <argument name="key" class="data"/>
        <argument name="index" type="size"/>
    </method>

    <method name="remove participant">
        Remove participant from chat.

        <argument name="participant id" class="data">
            Participant's 32-byte identifier.
        </argument>

        <return enum="status">
            Error
        </return>
    </method>

    <method name="get ticket message" is_const="1">
        Generates message that should be sent to all participants using secure channel.

        <return class="ratchet group message" access="readonly">
            Ratchet group message.
        </return>
    </method>
</class>
