<class name="ratchet skipped group message key root node" context="public" scope="internal">

    <require class="ratchet common" scope="public"/>

    <require module="ratchet typedefs" scope="context"/>

    <property name="id" class="vscr_ratchet_participant_id_t" is_reference="0" library="internal" access="readwrite"/>
    <property name="begin" class="ratchet skipped group message key node" access="readwrite"/>

    <method name="find key" is_const="1">
        <argument name="epoch" type="size"/>
        <argument name="counter" type="size"/>

        <return class="ratchet message key" access="readwrite"/>
    </method>

    <method name="delete key">
        <argument name="skipped message key" class="ratchet message key" access="readwrite"/>
    </method>

    <method name="add key">
        <argument name="skipped group message key" class="ratchet skipped group message key" access="readwrite"/>
    </method>

    <method name="serialize" is_const="1">
        <argument name="root node pb" class="SkippedGroupMessagesRoot" library="nanopb" access="readwrite"/>
    </method>

    <method name="deserialize" is_static="1">
        <argument name="root node pb" class="SkippedGroupMessagesRoot" library="nanopb" access="readwrite"/>
        <argument name="root node" class="self" access="readwrite"/>
    </method>

</class>
