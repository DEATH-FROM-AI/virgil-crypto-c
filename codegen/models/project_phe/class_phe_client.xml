<class name="phe client" context="private">

    <require class="phe common" scope="public"/>
    <require impl="sha512" project="foundation" scope="private"/>
    <require impl="hkdf" project="foundation" scope="private"/>
    <require impl="ctr drbg" project="foundation" scope="private"/>

    <require header="PHEModels.pb.h" scope="private"/>
    <require header="pb_decode.h" scope="private"/>
    <require header="pb_encode.h" scope="private"/>

    <dependency name="phe hash" class="phe hash"/>
    <dependency name="random" interface="random" project="foundation"/>

    <property name="group" class="mbedtls_ecp_group" library="mbedtls" access="readwrite" is_reference="0"/>
    <property name="secret key" class="buffer" access="readwrite"/>

    <method name="enroll account">
        <argument name="enrollment response" class="data"/>
        <argument name="password" class="data"/>
        <argument name="enrollment record" class="buffer" access="readwrite"/>
        <argument name="account key" class="buffer" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="create verify password request">
        <argument name="password" class="data"/>
        <argument name="enrollment record" class="data"/>
        <argument name="verify password request" class="buffer" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="check response and decrypt">
        <argument name="password" class="data"/>
        <argument name="enrollment record" class="data"/>
        <argument name="verify password response" class="data"/>
        <argument name="account key" class="buffer" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="check success proof" declaration="private">
        <argument name="success proof" class="ProofOfSuccess" library="nanopb"/>
        <argument name="nonce" class="data"/>
        <argument name="c0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="c1" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="c0_b" class="data"/>
        <argument name="c1_b" class="data"/>

        <return enum="error"/>
    </method>

    <method name="check fail proof" declaration="private">
        <argument name="fail proof" class="ProofOfFail" library="nanopb"/>
        <argument name="c0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="c1" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="hs0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="hc0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="hc1" class="mbedtls_ecp_point" library="mbedtls"/>

        <return enum="error"/>
    </method>
</class>
