<class name="phe server" context="private">

    <require class="phe common" scope="public"/>
    <require impl="ctr drbg" project="foundation" scope="private"/>

    <require header="PHEModels.pb.h" scope="private"/>
    <require header="pb_decode.h" scope="private"/>
    <require header="pb_encode.h" scope="private"/>

    <dependency name="random" interface="random" project="foundation"/>

    <property name="utils" class="phe utils"/>
    <property name="phe hash" class="phe hash"/>
    <property name="group" class="mbedtls_ecp_group" library="mbedtls" access="readwrite" is_reference="0"/>

    <method name="generate server key pair">
        <argument name="server private key" class="buffer" access="readwrite"/>
        <argument name="server public key" class="buffer" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="get enrollment">
        <argument name="server private key" class="data"/>
        <argument name="enrollment response" class="buffer" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="verify password">
        <argument name="server private key" class="data"/>
        <argument name="server public key" class="data"/>
        <argument name="verify password request" class="data"/>
        <argument name="verify password response" class="buffer" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="prove success" declaration="private">
        <argument name="server private key" class="data"/>
        <argument name="server public key" class="data"/>
        <argument name="hs0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="hs1" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="c0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="c1" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="success proof" class="ProofOfSuccess" library="nanopb" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="prove failure" declaration="private">
        <argument name="server private key" class="data"/>
        <argument name="server public key" class="data"/>
        <argument name="c0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="hs0" class="mbedtls_ecp_point" library="mbedtls"/>
        <argument name="c1" class="mbedtls_ecp_point" library="mbedtls" access="readwrite"/>
        <argument name="failure proof" class="ProofOfFail" library="nanopb" access="readwrite"/>

        <return enum="error"/>
    </method>

    <method name="rotate server private key">
        <argument name="server private key" class="data"/>
        <argument name="new server private key" class="buffer" access="readwrite"/>
        <argument name="new server public key" class="buffer" access="readwrite"/>
        <argument name="rotation token" class="buffer" access="readwrite"/>

        <return enum="error"/>
    </method>

</class>
