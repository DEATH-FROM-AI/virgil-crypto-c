.template 0

gsl from "common.gsl"
gsl from "js_codegen.gsl"
gsl from "js_models.gsl"

function js_create_project_module(project, wrapper)
  echo_info("Create project module: $(my.project.name:no)", my)
  my.js_project = js_append_js_project_model(my.wrapper, my.project, my.wrapper)
  my.name = "$(my.js_project.name:no) umbrella"
  my.js_module = js_append_js_module_model(my.js_project, my.name)
  js_append_js_umbrella_module_model(my.js_module, my.js_project, my.project, my.name)
  my.name = my.js_project.name
  my.js_module = js_append_js_module_model(my.js_project, my.name)
  js_append_js_root_module_model(my.js_module, my.js_project, my.name)
  return my.js_project
endfunction

function js_create_interface_module(source, wrapper_project, meta)
  echo_info("Create interface module: $(my.source.name:no)", my)
  my.js_module = js_append_js_module_model(my.wrapper_project, my.source.name)
  js_append_js_interface_module_model(my.js_module, my.source, my.wrapper_project)
endfunction

function js_create_implementation_module(source, wrapper_project, meta)
  echo_info("Create implementation module: $(my.source.name)", my)
  if !my.wrapper_project.has_implementation_resolver
    my.wrapper_project.has_implementation_resolver = 1
    my.name = "$(my.wrapper_project.name:no) implementation resolver"
    my.js_module = js_append_js_module_model(my.wrapper_project, my.name)
    js_append_js_implementation_resolver_module_model(my.js_module, my.wrapper_project, my.name)
  endif
  my.js_module = js_append_js_module_model(my.wrapper_project, my.source.name)
  js_append_js_class_module_model(my.js_module, my.source, my.wrapper_project, my.meta)
endfunction

function js_create_class_module(source, wrapper_project, meta)
  echo_info("Create class module: $(my.source.name:no)", my)
  if my.source.scope = "public" & my.source.name <> "error"
    my.js_module = js_append_js_module_model(my.wrapper_project, my.source.name)
    js_append_js_class_module_model(my.js_module, my.source, my.wrapper_project, my.meta)
  endif
endfunction

function js_create_enum_module(source, wrapper_project, meta)
  echo_info("Create enum module: $(my.source.name:no)", my)
  if !(my.source.name = "status")
    my.js_module = js_append_js_module_model(my.wrapper_project, my.source.name)
    js_append_js_enum_module_model(my.js_module, my.source, my.wrapper_project)
  else
    my.name = "$(my.wrapper_project.name:no) error handler"
    my.js_module = js_append_js_module_model(my.wrapper_project, my.name)
    js_append_js_error_status_module_model(my.js_module, my.source, my.wrapper_project, my.name)
  endif
endfunction

function js_module_resolve(source, wrapper_project)
  echo_info("Resolve module: $(my.source.name:no)", my)
endfunction

function js_create_toplevel_modules(wrapper_project)
  js_append_toplevel_module_models(my.wrapper_project)
endfunction

function js_generate_project(wrapper_project)
  echo_info("Generate project: $(my.wrapper_project.name:no)", my)
  if -1 = directory.create(my.wrapper_project.project_source_dir)
    echo_fatal("Can't create directory '$(my.wrapper_project.project_source_dir)'", my)
  endif
endfunction

function js_generate_sources(wrapper_project)
  echo_info("Generate sources for project: $(my.wrapper_project.name:no)", my)
  if !defined(my.wrapper_project->js_module)
    js_create_wrapper_top_level(my.wrapper_project)
  endif
  for my.wrapper_project.js_module
    if defined(js_module->js_interface_module)
      js_create_js_interface_module(js_module->js_interface_module, my.wrapper_project)
    elsif defined(js_module->js_enum_module)
      js_create_js_enum_module(js_module->js_enum_module)
    elsif defined(js_module->js_error_status_module)
      js_create_js_error_status_module(js_module->js_error_status_module)
    elsif defined(js_module->js_class_module)
      js_create_js_class_module(js_module->js_class_module, my.wrapper_project)
    elsif defined(js_module->js_implementation_resolver_module)
      js_create_js_implementation_resolver_module(js_module->js_implementation_resolver_module, my.wrapper_project)
    elsif defined(js_module->js_umbrella_module)
      js_create_js_umbrella_module(js_module->js_umbrella_module, my.wrapper_project)
    elsif defined(js_module->js_root_module)
      js_create_js_root_module(js_module->js_root_module, my.wrapper_project)
    else
      echo_fatal("Unknown 'js_module'", my)
    endif
  endfor
endfunction

endtemplate
