.template 0
#   Copyright (C) 2015-2018 Virgil Security Inc.
#
#   All rights reserved.
#
#   Redistribution and use in source and binary forms, with or without
#   modification, are permitted provided that the following conditions are
#   met:
#
#       (1) Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#       (2) Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#       (3) Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived from
#       this software without specific prior written permission.
#
#   THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR
#   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#   DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
#   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#   (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#   SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
#   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
#   IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#   POSSIBILITY OF SUCH DAMAGE.
#
#   Lead Maintainer: Virgil Security Inc. <support@virgilsecurity.com>

# ---------------------------------------------------------------------------
#   Inject dependencies of the project 'common' to the entries that use it's
#   features.
#
#    Private function prefix is: B13.
#
# ---------------------------------------------------------------------------
#   This is a code generator built using the iMatix GSL code generation
#   language. See https://github.com/imatix/gsl for details.
# ---------------------------------------------------------------------------


gsl from "common.gsl"


function _B13_class_is_used (source, class_name)
    check_arguments (my, "source, class_name", my)

    for my.source.struct
        for struct.property where string_equal (property.class ?, my.class_name)
            return 1
        endfor
    endfor

    for my.source.context
        for context.property where string_equal (property.class ?, my.class_name)
            return 1
        endfor
    endfor

    for my.source.method
        for method.argument where string_equal (argument.class ?, my.class_name)
            return 1
        endfor
    endfor

    for my.source.callback
        for callback.argument where string_equal (argument.class ?, my.class_name)
            return 1
        endfor
    endfor

    return 0
endfunction


function _B13_add_class_require (class_name, destination)
    check_arguments (my, "class_name. destination", my)

    if count (my.destination.require, require.project = "common" & require.feature = my.class_name)
        return
    endif

    new require to my.destination
        .project = "common"
        .feature = my.class_name
    endnew
endfunction


function project_common_resolve_dependecies_for (class)
    check_arguments (my, "class", my)

    if _B13_class_is_used (my.class, "data")
        _B13_add_class_require ("data", my.class)
    endif

    if _B13_class_is_used (my.class, "buffer")
        _B13_add_class_require ("buffer", my.class)
    endif
endfunction

.endtemplate
