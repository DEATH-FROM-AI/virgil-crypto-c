<class name="ratchet" context="private">

    <require header="virgil/foundation/vscf_hmac256.h" scope="public"/>
    <require header="virgil/foundation/vscf_hkdf.h" scope="public"/>
    <require header="virgil/foundation/vscf_error_ctx.h" scope="public"/>
    <require header="ed25519/ed25519.h" is_system="1" scope="private"/>

    <require class="ratchet common" scope="public"/>
    <require class="ratchet message" scope="public"/>
    <require class="ratchet message key" scope="public"/>
    <require class="ratchet chain key" scope="public"/>

    <variable name="ratchet chain key seed" type="unsigned" size="1" declaration="private" definition="private">
        <array length="derived"/>
        <value value="0x02"/>
    </variable>

    <variable name="ratchet message key seed" type="unsigned" size="1" declaration="private" definition="private">
        <array length="derived"/>
        <value value="0x01"/>
    </variable>

    <dependency name="rng" interface="ratchet rng" access="readwrite"/>
    <dependency name="cipher" class="ratchet cipher" access="readwrite"/>
    <dependency name="kdf info" class="ratchet kdf info" access="readwrite"/>
    <dependency name="sender chain" class="ratchet sender chain" access="readwrite"/>
    <dependency name="receiver chains" class="ratchet receiver chain list node" access="readwrite"/>
    <dependency name="skipped message keys" class="ratchet skipped message key list node" access="readwrite"/>
    <property name="root key" type="byte" access="readwrite">
        <array length="fixed" length_constant=".(class_ratchet_common_constant_ratchet_shared_key_length)"/>
    </property>

    <method name="create chain key" declaration="private">
        <argument class="context" access="readonly"/>
        <argument name="private key" class="buffer" access="readonly"/>
        <argument name="public key" class="buffer" access="readonly"/>

        <argument name="new root key" type="byte" access="readwrite">
            <array length="fixed" length_constant=".(class_ratchet_common_constant_ratchet_shared_key_length)"/>
        </argument>

        <argument name="chain key" class="ratchet chain key" access="readwrite"/>
    </method>

    <method name="advance chain key" declaration="private">
        <argument name="chain key" class="ratchet chain key" access="readwrite"/>
    </method>

    <method name="create message key" declaration="private">
        <argument name="chain key" class="ratchet chain key"/>

        <return class="ratchet message key" access="readwrite"/>
    </method>

    <method name="decrypt for existing chain" declaration="private">
        <argument class="context"/>
        <argument name="chain key" class="ratchet chain key"/>
        <argument name="message" class="ratchet message"/>
        <argument name="buffer" class="buffer"/>

        <return type="error"/>
    </method>

    <method name="decrypt for new chain" declaration="private">
        <argument class="context"/>
        <argument name="message" class="ratchet message"/>
        <argument name="buffer" class="buffer"/>

        <return type="error"/>
    </method>

    <method name="respond">
        <argument class="context"/>
        <argument name="shared secret" class="data"/>
        <argument name="ratchet public key" class="buffer"/>
    </method>

    <method name="initiate">
        <argument class="context"/>
        <argument name="shared secret" class="data"/>
        <argument name="ratchet private key" class="buffer"/>
    </method>

    <method name="encrypt len">
        <argument class="context"/>
        <argument name="plain text" class="data"/>

        <return type="size"/>
    </method>

    <method name="encrypt">
        <argument class="context"/>
        <argument name="plain text" class="data"/>
        <argument name="cipher text" class="buffer"/>

        <return type="error"/>
    </method>

    <method name="decrypt len">
        <argument class="context"/>
        <argument name="cipher text" class="data"/>

        <return type="size"/>
    </method>

    <method name="decrypt">
        <argument class="context"/>
        <argument name="cipher text" class="data"/>
        <argument name="plain text" class="buffer"/>

        <return type="error"/>
    </method>

    <method name="find receiver chain" declaration="private">
        <argument class="context"/>
        <argument name="message" class="ratchet message" access="readonly"/>

        <return class="ratchet receiver chain" access="readwrite"/>
    </method>

    <method name="find skipped message key" declaration="private">
        <argument class="context"/>
        <argument name="message" class="ratchet message" access="readonly"/>

        <return class="ratchet skipped message key" access="readwrite"/>
    </method>

    <method name="erase skipped message key" declaration="private">
        <argument class="context"/>
        <argument name="skipped message key" class="ratchet skipped message key" access="readwrite"/>
    </method>

    <method name="add receiver chain" declaration="private">
        <argument class="context"/>
        <argument name="receiver chain" class="ratchet receiver chain" access="readwrite"/>
    </method>

    <method name="add skipped message key" declaration="private">
        <argument class="context"/>
        <argument name="skipped message key" class="ratchet skipped message key" access="readwrite"/>
    </method>

</class>
