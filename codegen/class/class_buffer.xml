<class name="buffer" context="private">
    Encapsulates fixed byte array with variable effective data length.

    <require module="data"/>


    <property name="bytes" type="data" access="readwrite">
        Underlying byte array.
    </property>


    <property name="capacity" type="size">
        Byte array capacity - total allocated bytes.
    </property>


    <property name="len" type="size">
        Byte array length - actually used bytes from the beginning.
    </property>


    <property name="bytes_dealloc" callback=".(global_callback_dealloc)">
        Function do deallocate underlying byte array.
    </property>


    <method name="alloc">
        Allocates inner buffer with a given capacity.
        Precondition: buffer is initialized.
        Precondition: buffer does not hold any bytes.

        <argument name="capacity" type="size"/>

        <return type="error"/>
    </method>


    <method name="use">
        Use given data as output buffer.
        Client side is responsible for data deallocation.
        Precondition: buffer is initialized.
        Precondition: buffer does not hold any bytes.

        <argument name="bytes" type="data" access="readwrite"/>
        <argument name="bytes len" type="size"/>
    </method>


    <method name="take">
        Use given data as output buffer.
        Buffer is responsible for data deallocation.
        Precondition: buffer is initialized.
        Precondition: buffer does not hold any bytes.

        <argument name="bytes" type="data" access="readwrite"/>
        <argument name="bytes len" type="size"/>
        <argument name="dealloc" callback=".(global_callback_dealloc)"/>
    </method>


    <method name="bytes">
        Returns underlying buffer bytes.

        <return type="data" access="readonly">
            <array access="disown"/>
        </return>
    </method>

    <method name="data">
        Returns underlying buffer bytes as object.

        <return class=".(class_data_struct_data)" is_reference="0" access="readwrite"/>
    </method>


    <method name="capacity">
        Returns buffer capacity.

        <return type="size"/>
    </method>


    <method name="len">
        Returns buffer length - length of bytes actually used.

        <return type="size"/>
    </method>


</class>
